exit
push_events = response.select { |event| event["type"] == "PushEvent" }
push_events = response.where(event["type"] == "PushEvent")
response
exit
recent["payload"]["commits"].first["message"]
recent["payload"]["commits"]
exit
recent["playload"]["commits"]
recent["playload"]["commits"].first
recent["playload"]["commits"].first["message"]
exit
response
exit
parse(response)
response
exit
response
parse(response)
exit
response
parse(response)
parse(resposne)
exit
organizations
UserServices.new(self).organizations
exit
UserServices.new(self).all_repositories.first
_.first
UserServices.new(self).all_repositories
exit
response
exit
parse(response)
response
exit
parse(response).first
parse(response)
response.keys
parse(response).keys
parse(response)
response
exit
next
exit
User.first
new_user.avatar_url
params
exit
auth_info.extra.raw_info.avatar_url
auth_info.extra.raw_info
auth_info.extra.avatar_url
auth_info.extra
auth_info
auth_info.info
auth_info
_.auth_info
User.first
exit
auth_info
params
exit
params
exit
params
exit
auth_info.info
auth_info.credentials
_.credentials
auth_info.keys
y auth_info
auth_info
